const $ = id => document.getElementById(id);

const API = "http://localhost:5800/todo";


// –ê–Ω—ñ–º–∞—Ü—ñ—è –ø–æ—è–≤–∏ —Ç–∞ –ø—Ä–∏—Ö–æ–≤—É–≤–∞–Ω–Ω—è .add-item
$("addButton").onclick = () => {
    const addItem = $("addItem");
    addItem.style.display = 'block';
    // –¢—Ä–∏–≥–µ—Ä–∏–º–æ –∞–Ω—ñ–º–∞—Ü—ñ—é —á–µ—Ä–µ–∑ –∫–ª–∞—Å
    setTimeout(() => addItem.classList.add('active'), 10);
};

$("closeWindowBtn").onclick = () => {
    const addItem = $("addItem");
    addItem.classList.remove('active');
    // –ß–µ–∫–∞—î–º–æ –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—è –∞–Ω—ñ–º–∞—Ü—ñ—ó, –ø–æ—Ç—ñ–º –ø—Ä–∏—Ö–æ–≤—É—î–º–æ
    setTimeout(() => {
        addItem.style.display = 'none';
    }, 500);
};

/* –ü—Ä–∏ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—ñ —Å—Ç–æ—Ä—ñ–Ω–∫–∏ –≤–∏–∫–ª–∏–∫–∞—î—Ç—å—Å—è loadTodoList */
window.addEventListener('DOMContentLoaded', loadTodoList);

// –û–±—Ä–æ–±–∫–∞ –≤—ñ–¥–ø—Ä–∞–≤–∫–∏ —Ñ–æ—Ä–º–∏ –¥–æ–¥–∞–≤–∞–Ω–Ω—è –∑–∞–¥–∞—á—ñ
$("submitButton").onclick = async e => {
    e.preventDefault();
    // –û—Ç—Ä–∏–º—É—î–º–æ –∑–Ω–∞—á–µ–Ω–Ω—è –∑ –ø–æ–ª—ñ–≤ —Ñ–æ—Ä–º–∏
    const title = $("task-name").value.trim();
    const description = $("task-description").value.trim();
    const completeTime = $("task-date").value;
    try {
        // –í—ñ–¥–ø—Ä–∞–≤–ª—è—î–º–æ POST-–∑–∞–ø–∏—Ç –Ω–∞ —Å–µ—Ä–≤–µ—Ä –¥–ª—è –¥–æ–¥–∞–≤–∞–Ω–Ω—è –∑–∞–¥–∞—á—ñ
        const res = await fetch(API, {
            method: "POST",
            headers: { "Content-Type": "application/json" },
            body: JSON.stringify({ title, description, isCompleted: false, completeTime })
        });
        if (!res.ok) throw new Error(await res.text());
        // –û—á–∏—â–∞—î–º–æ —Ñ–æ—Ä–º—É —ñ –∑–∞–∫—Ä–∏–≤–∞—î–º–æ –≤—ñ–∫–Ω–æ
        $("task-name").value = '';
        $("task-description").value = '';
        $("task-date").value = '';
        $("addItem").style.display = 'none';
        // –û–Ω–æ–≤–ª—é—î–º–æ —Å–ø–∏—Å–æ–∫ –∑–∞–¥–∞—á
        loadTodoList();
    } catch (err) {
        alert('–ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –¥–æ–¥–∞–≤–∞–Ω–Ω—ñ –∑–∞–¥–∞—á—ñ: ' + err.message);
    }
};


// –î–µ–ª–µ–≥—É–≤–∞–Ω–Ω—è –ø–æ–¥—ñ–π –¥–ª—è –∫–Ω–æ–ø–æ–∫ –≤–∏–¥–∞–ª–µ–Ω–Ω—è –∑–∞–¥–∞—á
$("todoList").onclick = function(e) {
    if (e.target.classList.contains('close-btn')) {
        const taskDiv = e.target.closest('.task');
        const id = taskDiv.getAttribute('data-id');
        console.log(`–í–∏–¥–∞–ª–µ–Ω–Ω—è –∑–∞–¥–∞—á—ñ –∑ ID: ${id}`);
        
        if (id) deleteTodoItem(id);
    }
};

window.addEventListener('DOMContentLoaded', loadTodoList);

// –û—Ç—Ä–∏–º–∞–Ω–Ω—è —Å–ø–∏—Å–∫—É –∑–∞–¥–∞—á –∑ —Å–µ—Ä–≤–µ—Ä–∞ —ñ –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è —ó—Ö –Ω–∞ —Å—Ç–æ—Ä—ñ–Ω—Ü—ñ
async function loadTodoList() {
    try {
        const res = await fetch(API);
        const data = await res.json();
        renderTodoList(data);
    } catch (err) {
        console.error("–ü–û–ú–ò–õ–ö–ê:", err);
    }
}


// –§–æ—Ä–º–∞—Ç—É–≤–∞–Ω–Ω—è –¥–∞—Ç–∏ –¥–ª—è –≥–∞—Ä–Ω–æ–≥–æ –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è
function formatDate(dateStr) {
    if (!dateStr) return '';
    // –ü–µ—Ä–µ—Ç–≤–æ—Ä—é—î–º–æ —Ä—è–¥–æ–∫ —É Date
    const d = new Date(dateStr);
    if (isNaN(d)) return dateStr;
    // –û—Ç—Ä–∏–º—É—î–º–æ YYYY-MM-DD HH:mm
    const yyyy = d.getFullYear();
    const mm = String(d.getMonth() + 1).padStart(2, '0');
    const dd = String(d.getDate()).padStart(2, '0');
    const hh = String(d.getHours()).padStart(2, '0');
    const min = String(d.getMinutes()).padStart(2, '0');
    return `${yyyy}-${mm}-${dd} ${hh}:${min}`;
}

// –í—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è —Å–ø–∏—Å–∫—É –∑–∞–¥–∞—á –Ω–∞ —Å—Ç–æ—Ä—ñ–Ω—Ü—ñ
function renderTodoList(todos) {
    const todoList = $("todoList");
    todoList.innerHTML = '';
    todos.forEach((todo, i) => {
        const dateStr = formatDate(todo.CompleteTime || todo.completeTime);
        const div = document.createElement('div');
        div.className = 'task';
        div.setAttribute('data-id', todo.Id || todo.id);
        div.innerHTML = `
            <div class="info">
                <h1>${todo.Title || todo.title}</h1>
                <p>${todo.Description || todo.description}</p>
            </div>
            <div class="date">${dateStr}</div>
            <button class="close-btn">‚úñ</button>
        `;
        todoList.appendChild(div);
        // –ê–Ω—ñ–º–∞—Ü—ñ—è –ø–æ—è–≤–∏ —ñ–∑ –∑–∞—Ç—Ä–∏–º–∫–æ—é –¥–ª—è –ø–ª–∞–≤–Ω–æ—Å—Ç—ñ
        setTimeout(() => div.classList.add('task-in'), 30 + i * 60);
    });
}

function deleteTodoItem(id) {
    const taskDiv = document.querySelector(`.task[data-id="${id}"]`);
    if (taskDiv) {
        taskDiv.classList.remove('task-in');
        taskDiv.classList.add('task-out');
        setTimeout(() => {
            fetch(`${API}/${id}`, {
                method: 'DELETE',
            })
            .then(res => {
                if (!res.ok) throw new Error('–ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –≤–∏–¥–∞–ª–µ–Ω–Ω—ñ –∑–∞–¥–∞—á—ñ');
                loadTodoList();
            })
            .catch(err => alert(err.message));
        }, 400); // —á–∞—Å —Å–ø—ñ–≤–ø–∞–¥–∞—î –∑ transition
    } else {
        // fallback —è–∫—â–æ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ div
        fetch(`${API}/${id}`, {
            method: 'DELETE',
        })
        .then(res => {
            if (!res.ok) throw new Error('–ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –≤–∏–¥–∞–ª–µ–Ω–Ω—ñ –∑–∞–¥–∞—á—ñ');
            loadTodoList();
        })
        .catch(err => alert(err.message));
    }
}


$("sendToAIBtn").onclick = () => {
    const textInput = $("textToAI");
    if (!textInput) {
        alert('–ü–æ–ª–µ –¥–ª—è –≤–≤–µ–¥–µ–Ω–Ω—è —Ç–µ–∫—Å—Ç—É –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ!');
        return;
    }
    const text = textInput.value.trim();
    if (text) {
        const btn = $("sendToAIBtn");
        btn.disabled = true;
        const oldContent = btn.innerHTML;
        btn.innerHTML = 'üîÑ';
        fetch(`${API}/ai-process`, {
            method: "POST",
            headers: { "Content-Type": "application/json" },
            body: JSON.stringify(text)
        })
        .then(res => {
            if (!res.ok) throw new Error('–ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –æ–±—Ä–æ–±—Ü—ñ AI');
            return res.json();
        })
        .then(() => {
            loadTodoList();
        })
        .catch(err => alert(err.message))
        .finally(() => {
            btn.innerHTML = oldContent;
            btn.disabled = false;
            textInput.value = '';
        });
    } else {
        alert('–ë—É–¥—å –ª–∞—Å–∫–∞, –≤–≤–µ–¥—ñ—Ç—å —Ç–µ–∫—Å—Ç –¥–ª—è AI');
    }
}